{
  "functional component": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "fc",
    "body": [
      "type ${1:componentName}Props = { hoge: string }",
      "const $1: FC<$1Props> = (props) => {",
      "// const [state, setState] = useState()",
      "return (",
      "<>",
      "   <div",
      "      style={{",
      "      display: 'flex',",
      "      flexDirection: 'row',",
      "      justifyContent: 'center',",
      "      alignItems: 'center',",
      "    }}",
      "  >",
      "    {props.hoge}",
      "  </div>",
      "  <div",
      "    style={{",
      "      // borderTop: '4px solid #fb8a0b',",
      "      width: '100%',",
      "      height: '100%',",
      "      margin: '4px',",
      "    }}",
      "  >",
      "    {props.children}",
      "  </div>",
      "</>",
    ")",
  "}",

      ""
    ],
    "description": "React functional component template"
  },

  "jest describe template": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "desc",
    "body":["describe('Basic Test', () => {",
      "  it('Simple DOM Draw Check', () => {",
      "    const target = render(<><div>hoge</div></>)",
      "",
      "    const domText = prettyDOM(target.baseElement)",
      "    console.log(domText)",
      "",
      "    expect(domText).toContain('hoge')",
      "  })",
      "})"] ,
    "description": "jest describe template"
  },

  "lodash": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "lodas",
    "body": [
      "import * as _ from 'lodash'"
    ],
    "description": "lodash import statement"
  },

  "style": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "styl",
    "body": [
      "style={{",
      "display: 'flex',",
      "flexDirection: 'row',",
      "justifyContent: 'center',",
      "alignItems: 'center',",
      "}}",
    ],
    "description": "CSSProperties complication statement"
  },

  "switch": {
    "scope": "typescriptreact,javascriptreact ",
    "prefix": "switc",
    "body":["switch (type) {",
"    case '':",
"        return (<></>)",
"    case '':",
"        return (<></>)",
"    case '':",
"        return (<></>)",
"    default:",
"      const exhaustiveCheck: never = type",
"      return <></>",
"}"] ,
    "description": "switch for exhaustiveCheck"
},

"storybook_story_template": {
  "scope": "typescriptreact,javascriptreact ",
  "prefix": "story",
  "body": [
    "import React from 'react'",
    "import { Story, Meta } from '@storybook/react/types-6-0'",
    "import { ${1:componentName}, $1Props } from '~/components/${2:path}'",
    "",
    "export default {",
    "  title: '$2/$1',",
    "  component: $1,",
    "  parameters: { actions: { argTypesRegex: '^on.*' } },",
    "} as Meta",
    "",
    "const Template: Story<$1Props> = (args) => ( <$1 {...args} /> )",
    "",
    "export const ${3:FirstStory} = Template.bind({})",
    "$3.storyName = '${4:表示名}'",
    "$3.args = {",
    "  $5,",
    "}",
    "",
    "export const ${6:SecondStory} = Template.bind({})",
    "$6.storyName = '${7:表示名}'",
    "$6.args = {",
    "  $8,",
    "}",
    ""
  ],
  "description": "Storybook story template"
}
}

